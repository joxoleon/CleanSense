//
//  BaseConfigurator.swift
//  CleanSwiftTestProject
//
//  Created by Jovan on 4/13/19.
//  Copyright (c) 2019 Jovan. All rights reserved.
//
//  This file was 'partially' generated by the Clean Swift templates created by Jovan Radivojsa (a.k.a. joxoleon),
//  Based on the original clean swift templates created by Raymond Law: http://clean-swift.com
//

import UIKit

// Connects View, Interactor, and Presenter
class BaseConfigurator: ConfiguratorLogic {

// MARK: - Scene Component Properties
weak var viewController: BaseViewController?
weak var interactor: BaseInteractor? {
    didSet {
        // Set interactor references
        interactor?.presenter = presenter
        // Set references to interactor
        viewController?.interactor = interactor
        router?.dataStore = interactor
    }
}
weak var presenter: BasePresenter? {
    didSet {
        // Set presenter references
        presenter?.viewController = viewController
        // Set references to presenter
        interactor?.presenter = presenter
    }
}
weak var router: BaseRouter? {
    didSet {
        // Set router references
        router?.viewController = viewController
        router?.dataStore = interactor
        // Set references to router
        viewController?.router = router
    }
}
weak var worker: BaseWorker? {
    didSet {
        // Set references to worker
        interactor?.worker = worker
    }
}

// MARK: - Configuration

func configure(_ viewController: BaseViewController) {
    assertionFailure("This method should always be called from the child class, do not call super.configure(_)")
//    // Instantiate components.
//    let presenter = BasePresenter()
//    let worker = BaseWorker()
//    let interactor = BaseInteractor()
//    let router = BaseRouter()
//
//    // Set configurator variables and connect them.
//    self.viewController = viewController
//    self.worker = worker
//    self.presenter = presenter
//    self.interactor = interactor
//    self.router = router
}
}
