//
//  HomeConfigurator.swift
//  CleanSwiftTestProject
//
//  Created by Jovan on 4/13/19.
//  Copyright (c) 2019 Jovan. All rights reserved.
//
//  This file was 'partially' generated by the Clean Swift templates created by Jovan Radivojsa (a.k.a. joxoleon),
//  Based on the original clean swift templates created by Raymond Law: http://clean-swift.com
//

import UIKit

extension HomeViewController {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        // Set 
        router?.passDataToNextScene(segue: segue)
    }
}

// Connects View, Interactor, and Presenter
class HomeConfigurator: ConfiguratorLogic {

    // MARK: - Scene Component Properties
    weak var viewController: HomeViewController?
    weak var interactor: HomeInteractor? {
        didSet {
            // Set interactor references
            interactor?.presenter = presenter
            // Set references to interactor
            viewController?.interactor = interactor
            router?.dataStore = interactor
        }
    }
    weak var presenter: HomePresenter? {
        didSet {
            // Set presenter references
            presenter?.viewController = viewController
            // Set references to presenter
            interactor?.presenter = presenter
        }
    }
    weak var router: HomeRouter? {
        didSet {
            // Set router references
            router?.viewController = viewController
            router?.dataStore = interactor
            // Set references to router
            viewController?.router = router
        }
    }
    weak var worker: HomeWorker? {
        didSet {
            // Set worker references
            // TODO: Is there a possibility to add some sort of manager abstraction here, probably not.
            // Set references to worker
            interactor?.worker = worker
        }
    }

    // MARK: - Configuration

    func configure(_ viewController: HomeViewController) {
        // Instantiate components.
        let presenter = HomePresenter()
        let worker = HomeWorker()
        let interactor = HomeInteractor()
        let router = HomeRouter()

        // Set configurator variables and connect them.
        self.viewController = viewController
        self.worker = worker
        self.presenter = presenter
        self.interactor = interactor
        self.router = router
    }
}
