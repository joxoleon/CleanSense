//
//  ChildViewController.swift
//  CleanSwiftTestProject
//
//  Created by Jovan on 4/13/19.
//  Copyright (c) 2019 Jovan. All rights reserved.
//
//  This file was 'partially' generated by the 'Component Based Clean Swift Templates' created by Jovan Radivojsa (a.k.a. joxoleon)
//  Based on the clean swift templates created by Raymond Law: http://clean-swift.com
//

import UIKit

protocol ChildDisplayLogic: DisplayLogic {
    // func displaySomething(_ viewModel: Child.Something.ViewModel)
}

class ChildViewController: BaseViewController {

    // MARK: - Scene Component Properties
    var configurator: ChildConfigurator? { // Solely for testing purposes
        return baseConfigurator as? ChildConfigurator
    }
    var interactor: ChildBusinessLogic? {
        return baseInteractor as? ChildBusinessLogic
    }
    var router: ChildRouterInput? {
        return baseRouter as? ChildRouterInput
    }

    // MARK: Properties
    // var isSomething: Bool = true

    @IBAction func onChildNumberTextFieldChanged(_ sender: Any) {
        if let numberFied = sender as? UITextField, let num = numberFied.text {
            interactor?.childNumberChanged(Child.ChildNumberChanged.Request(childNumber: num))
        }
    }

    // Mark: - Outlets
    //@IBOutlet weak var nameTextField: UITextField!

    // MARK: - Object Lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        baseConfigurator = ChildConfigurator()
        configurator?.configure(self)
    }
    
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // Perform initialization of the scene
        // interactor?.doSomething()
    }

//    override func viewWillDisappear(_ animated: Bool) {
//        super.viewWillDisappear(animated)
//    }
}

extension ChildViewController: ChildDisplayLogic {

    // MARK: - Display Logic

    // func displaySomething(_ viewModel: Child.Something.ViewModel) {
    //     nameTextField.text = viewModel.name
    // }

    // MARK: - Utility Methods
}
