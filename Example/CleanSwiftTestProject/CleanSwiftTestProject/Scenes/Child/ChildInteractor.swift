//
//  ChildInteractor.swift
//  CleanSwiftTestProject
//
//  Created by Jovan on 4/13/19.
//  Copyright (c) 2019 Jovan. All rights reserved.
//
//  This file was 'partially' generated by the 'Component Based Clean Swift Templates' created by Jovan Radivojsa (a.k.a. joxoleon),
//  Based on the clean swift templates created by Raymond Law: http://clean-swift.com
//

import UIKit

protocol ChildBusinessLogic: BusinessLogic {
    // func doSomething(_ request: Child.Something.Request)
    func childNumberChanged(_ request: Child.ChildNumberChanged.Request)
}

protocol ChildDataStore: DataStore {
    var childNumber: String? { get set }
}

class ChildInteractor: BaseInteractor, ChildBusinessLogic, ChildDataStore {

    // MARK: - Scene Component Properties
    var presenter: ChildPresentationLogic? {
        return basePresenter as? ChildPresentationLogic
    }
    var worker: ChildWorker? {
        return baseWorker as? ChildWorker
    }

    // MARK: - Properties
    var childNumber: String?

    // MARK: - Receive data from child scene

    override func onBaseChildViewControllerClosing(childDataStore: DataStore) {
        // Receive data from child data store
    }

    // MARK: - Business Logic

    func childNumberChanged(_ request: Child.ChildNumberChanged.Request) {
        childNumber = request.childNumber
    }

    // MARK: - Utility Methods

    // func isSomethingSomething() -> Bool { return true }
}
